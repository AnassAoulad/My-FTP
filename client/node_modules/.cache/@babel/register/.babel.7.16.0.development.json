{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/nas/Documents/my-ftp-live/client/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nas/Documents/my-ftp-live/client\",\"filename\":\"/Users/nas/Documents/my-ftp-live/client/src/main.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nas/Documents/my-ftp-live/client\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/nas/Documents/my-ftp-live/client/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/nas/Documents/my-ftp-live/client",
      "filename": "/Users/nas/Documents/my-ftp-live/client/src/main.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/nas/Documents/my-ftp-live/client",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/nas/Documents/my-ftp-live/client/src/main.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/nas/Documents/my-ftp-live/client/src/main.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/nas/Documents/my-ftp-live/client/src/",
        "sourceFileName": "main.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _net = require(\"net\");\n\nvar _readline = require(\"readline\");\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar currentCommand = '';\nvar isAuthenticated = false;\nvar client = (0, _net.createConnection)({\n  port: 4242\n}, function () {\n  console.log(\"client connected.\");\n});\nclient.on(\"data\", function (data) {\n  var message = data.toString();\n  console.log(\"Message received:\", message);\n\n  var _message$trim$split = message.trim().split(' '),\n      _message$trim$split2 = _toArray(_message$trim$split),\n      status = _message$trim$split2[0],\n      args = _message$trim$split2.slice(1);\n\n  if (status == 230 && currentCommand === \"USER\") {\n    isAuthenticated = true;\n  }\n\n  ;\n\n  if (status == 220) {\n    currentCommand = \"USER\";\n    client.write(\"USER Tata\");\n    var rl = (0, _readline.createInterface)({\n      input: process.stdin\n    });\n    rl.on(\"line\", function (input) {\n      console.log('Input:', input);\n    });\n  }\n\n  ;\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiY3VycmVudENvbW1hbmQiLCJpc0F1dGhlbnRpY2F0ZWQiLCJjbGllbnQiLCJwb3J0IiwiY29uc29sZSIsImxvZyIsIm9uIiwiZGF0YSIsIm1lc3NhZ2UiLCJ0b1N0cmluZyIsInRyaW0iLCJzcGxpdCIsInN0YXR1cyIsImFyZ3MiLCJ3cml0ZSIsInJsIiwiaW5wdXQiLCJwcm9jZXNzIiwic3RkaW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBSUEsY0FBYyxHQUFHLEVBQXJCO0FBQ0EsSUFBSUMsZUFBZSxHQUFHLEtBQXRCO0FBRUEsSUFBTUMsTUFBTSxHQUFHLDJCQUFpQjtBQUFFQyxFQUFBQSxJQUFJLEVBQUU7QUFBUixDQUFqQixFQUFpQyxZQUFNO0FBQ3BEQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQkFBWjtBQUNELENBRmMsQ0FBZjtBQUlBSCxNQUFNLENBQUNJLEVBQVAsQ0FBVSxNQUFWLEVBQWtCLFVBQUNDLElBQUQsRUFBVTtBQUMxQixNQUFNQyxPQUFPLEdBQUdELElBQUksQ0FBQ0UsUUFBTCxFQUFoQjtBQUNBTCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQkFBWixFQUFpQ0csT0FBakM7O0FBRUEsNEJBQTBCQSxPQUFPLENBQUNFLElBQVIsR0FBZUMsS0FBZixDQUFxQixHQUFyQixDQUExQjtBQUFBO0FBQUEsTUFBT0MsTUFBUDtBQUFBLE1BQWtCQyxJQUFsQjs7QUFDQSxNQUFJRCxNQUFNLElBQUksR0FBVixJQUFpQlosY0FBYyxLQUFLLE1BQXhDLEVBQWdEO0FBQzlDQyxJQUFBQSxlQUFlLEdBQUcsSUFBbEI7QUFDRDs7QUFBQTs7QUFFRCxNQUFJVyxNQUFNLElBQUksR0FBZCxFQUFtQjtBQUNqQlosSUFBQUEsY0FBYyxHQUFHLE1BQWpCO0FBQ0FFLElBQUFBLE1BQU0sQ0FBQ1ksS0FBUCxDQUFhLFdBQWI7QUFDQSxRQUFNQyxFQUFFLEdBQUcsK0JBQWdCO0FBQ3pCQyxNQUFBQSxLQUFLLEVBQUVDLE9BQU8sQ0FBQ0M7QUFEVSxLQUFoQixDQUFYO0FBSUFILElBQUFBLEVBQUUsQ0FBQ1QsRUFBSCxDQUFNLE1BQU4sRUFBYyxVQUFDVSxLQUFELEVBQVc7QUFDdkJaLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFFBQVosRUFBc0JXLEtBQXRCO0FBQ0QsS0FGRDtBQUlEOztBQUFBO0FBR0YsQ0F2QkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL25hcy9Eb2N1bWVudHMvbXktZnRwLWxpdmUvY2xpZW50L3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDb25uZWN0aW9uIH0gZnJvbSBcIm5ldFwiO1xuaW1wb3J0IHsgY3JlYXRlSW50ZXJmYWNlIH0gZnJvbSBcInJlYWRsaW5lXCI7XG5cbmxldCBjdXJyZW50Q29tbWFuZCA9ICcnO1xubGV0IGlzQXV0aGVudGljYXRlZCA9IGZhbHNlO1xuXG5jb25zdCBjbGllbnQgPSBjcmVhdGVDb25uZWN0aW9uKHsgcG9ydDogNDI0MiB9LCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKFwiY2xpZW50IGNvbm5lY3RlZC5cIik7XG59KTtcblxuY2xpZW50Lm9uKFwiZGF0YVwiLCAoZGF0YSkgPT4ge1xuICBjb25zdCBtZXNzYWdlID0gZGF0YS50b1N0cmluZygpO1xuICBjb25zb2xlLmxvZyhcIk1lc3NhZ2UgcmVjZWl2ZWQ6XCIsIG1lc3NhZ2UpO1xuXG4gIGNvbnN0IFtzdGF0dXMsIC4uLmFyZ3NdID0gbWVzc2FnZS50cmltKCkuc3BsaXQoJyAnKTtcbiAgaWYgKHN0YXR1cyA9PSAyMzAgJiYgY3VycmVudENvbW1hbmQgPT09IFwiVVNFUlwiKSB7XG4gICAgaXNBdXRoZW50aWNhdGVkID0gdHJ1ZTtcbiAgfTtcblxuICBpZiAoc3RhdHVzID09IDIyMCkge1xuICAgIGN1cnJlbnRDb21tYW5kID0gXCJVU0VSXCI7XG4gICAgY2xpZW50LndyaXRlKFwiVVNFUiBUYXRhXCIpO1xuICAgIGNvbnN0IHJsID0gY3JlYXRlSW50ZXJmYWNlKHtcbiAgICAgIGlucHV0OiBwcm9jZXNzLnN0ZGluLFxuICAgIH0pO1xuXG4gICAgcmwub24oXCJsaW5lXCIsIChpbnB1dCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ0lucHV0OicsIGlucHV0KTtcbiAgICB9KVxuXG4gIH07XG5cblxufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "main.js"
      ],
      "names": [
        "currentCommand",
        "isAuthenticated",
        "client",
        "port",
        "console",
        "log",
        "on",
        "data",
        "message",
        "toString",
        "trim",
        "split",
        "status",
        "args",
        "write",
        "rl",
        "input",
        "process",
        "stdin"
      ],
      "mappings": ";;AAAA;;AACA;;;;;;;;;;;;;;AAEA,IAAIA,cAAc,GAAG,EAArB;AACA,IAAIC,eAAe,GAAG,KAAtB;AAEA,IAAMC,MAAM,GAAG,2BAAiB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAjB,EAAiC,YAAM;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,CAFc,CAAf;AAIAH,MAAM,CAACI,EAAP,CAAU,MAAV,EAAkB,UAACC,IAAD,EAAU;AAC1B,MAAMC,OAAO,GAAGD,IAAI,CAACE,QAAL,EAAhB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,OAAjC;;AAEA,4BAA0BA,OAAO,CAACE,IAAR,GAAeC,KAAf,CAAqB,GAArB,CAA1B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAkBC,IAAlB;;AACA,MAAID,MAAM,IAAI,GAAV,IAAiBZ,cAAc,KAAK,MAAxC,EAAgD;AAC9CC,IAAAA,eAAe,GAAG,IAAlB;AACD;;AAAA;;AAED,MAAIW,MAAM,IAAI,GAAd,EAAmB;AACjBZ,IAAAA,cAAc,GAAG,MAAjB;AACAE,IAAAA,MAAM,CAACY,KAAP,CAAa,WAAb;AACA,QAAMC,EAAE,GAAG,+BAAgB;AACzBC,MAAAA,KAAK,EAAEC,OAAO,CAACC;AADU,KAAhB,CAAX;AAIAH,IAAAA,EAAE,CAACT,EAAH,CAAM,MAAN,EAAc,UAACU,KAAD,EAAW;AACvBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBW,KAAtB;AACD,KAFD;AAID;;AAAA;AAGF,CAvBD",
      "sourceRoot": "/Users/nas/Documents/my-ftp-live/client/src/",
      "sourcesContent": [
        "import { createConnection } from \"net\";\nimport { createInterface } from \"readline\";\n\nlet currentCommand = '';\nlet isAuthenticated = false;\n\nconst client = createConnection({ port: 4242 }, () => {\n  console.log(\"client connected.\");\n});\n\nclient.on(\"data\", (data) => {\n  const message = data.toString();\n  console.log(\"Message received:\", message);\n\n  const [status, ...args] = message.trim().split(' ');\n  if (status == 230 && currentCommand === \"USER\") {\n    isAuthenticated = true;\n  };\n\n  if (status == 220) {\n    currentCommand = \"USER\";\n    client.write(\"USER Tata\");\n    const rl = createInterface({\n      input: process.stdin,\n    });\n\n    rl.on(\"line\", (input) => {\n      console.log('Input:', input);\n    })\n\n  };\n\n\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1638887336397
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/nas/Documents/my-ftp-live/client/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nas/Documents/my-ftp-live/client\",\"filename\":\"/Users/nas/Documents/my-ftp-live/client/src/main.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nas/Documents/my-ftp-live/client\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/nas/Documents/my-ftp-live/client/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/nas/Documents/my-ftp-live/client",
      "filename": "/Users/nas/Documents/my-ftp-live/client/src/main.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/nas/Documents/my-ftp-live/client",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/nas/Documents/my-ftp-live/client/src/main.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/nas/Documents/my-ftp-live/client/src/main.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/nas/Documents/my-ftp-live/client/src/",
        "sourceFileName": "main.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _net = require(\"net\");\n\nvar _readline = require(\"readline\");\n\nlet currentCommand = '';\nlet isAuthenticated = false;\nconst rl = (0, _readline.createInterface)({\n  input: process.stdin,\n  output: process.stdout\n});\nconst client = (0, _net.createConnection)({\n  port: 4242\n}, () => {\n  console.log(\"client connected.\");\n  rl.question('Enter a command: ', function (cmd) {\n    client.write(cmd);\n  });\n  client.on(\"data\", data => {\n    const message = data.toString();\n    console.log(\"Message received:\", message);\n    rl.question('Enter a command: ', function (cmd) {\n      client.write(cmd);\n    });\n    const [status, ...args] = message.trim().split(' ');\n\n    if (status == 230 && currentCommand === \"USER\") {\n      isAuthenticated = true;\n    }\n\n    ;\n\n    if (status == 221) {\n      console.log(\"Client is closed\");\n      process.exit();\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiY3VycmVudENvbW1hbmQiLCJpc0F1dGhlbnRpY2F0ZWQiLCJybCIsImlucHV0IiwicHJvY2VzcyIsInN0ZGluIiwib3V0cHV0Iiwic3Rkb3V0IiwiY2xpZW50IiwicG9ydCIsImNvbnNvbGUiLCJsb2ciLCJxdWVzdGlvbiIsImNtZCIsIndyaXRlIiwib24iLCJkYXRhIiwibWVzc2FnZSIsInRvU3RyaW5nIiwic3RhdHVzIiwiYXJncyIsInRyaW0iLCJzcGxpdCIsImV4aXQiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBSUEsY0FBYyxHQUFHLEVBQXJCO0FBQ0EsSUFBSUMsZUFBZSxHQUFHLEtBQXRCO0FBRUEsTUFBTUMsRUFBRSxHQUFHLCtCQUFnQjtBQUN6QkMsRUFBQUEsS0FBSyxFQUFFQyxPQUFPLENBQUNDLEtBRFU7QUFFekJDLEVBQUFBLE1BQU0sRUFBRUYsT0FBTyxDQUFDRztBQUZTLENBQWhCLENBQVg7QUFLQSxNQUFNQyxNQUFNLEdBQUcsMkJBQWlCO0FBQUVDLEVBQUFBLElBQUksRUFBRTtBQUFSLENBQWpCLEVBQWlDLE1BQU07QUFDcERDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1CQUFaO0FBQ0FULEVBQUFBLEVBQUUsQ0FBQ1UsUUFBSCxDQUFZLG1CQUFaLEVBQWlDLFVBQVNDLEdBQVQsRUFBYTtBQUM1Q0wsSUFBQUEsTUFBTSxDQUFDTSxLQUFQLENBQWFELEdBQWI7QUFDRCxHQUZEO0FBSUFMLEVBQUFBLE1BQU0sQ0FBQ08sRUFBUCxDQUFVLE1BQVYsRUFBbUJDLElBQUQsSUFBVTtBQUMxQixVQUFNQyxPQUFPLEdBQUdELElBQUksQ0FBQ0UsUUFBTCxFQUFoQjtBQUNBUixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQkFBWixFQUFpQ00sT0FBakM7QUFDQWYsSUFBQUEsRUFBRSxDQUFDVSxRQUFILENBQVksbUJBQVosRUFBaUMsVUFBU0MsR0FBVCxFQUFhO0FBQzVDTCxNQUFBQSxNQUFNLENBQUNNLEtBQVAsQ0FBYUQsR0FBYjtBQUNELEtBRkQ7QUFHQSxVQUFNLENBQUNNLE1BQUQsRUFBUyxHQUFHQyxJQUFaLElBQW9CSCxPQUFPLENBQUNJLElBQVIsR0FBZUMsS0FBZixDQUFxQixHQUFyQixDQUExQjs7QUFFQSxRQUFJSCxNQUFNLElBQUksR0FBVixJQUFpQm5CLGNBQWMsS0FBSyxNQUF4QyxFQUFnRDtBQUM5Q0MsTUFBQUEsZUFBZSxHQUFHLElBQWxCO0FBQ0Q7O0FBQUE7O0FBRUQsUUFBSWtCLE1BQU0sSUFBSSxHQUFkLEVBQWtCO0FBQ2hCVCxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxrQkFBWjtBQUNBUCxNQUFBQSxPQUFPLENBQUNtQixJQUFSO0FBQ0Q7QUFFRixHQWpCRDtBQW1CRCxDQXpCYyxDQUFmIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uYXMvRG9jdW1lbnRzL215LWZ0cC1saXZlL2NsaWVudC9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ29ubmVjdGlvbiB9IGZyb20gXCJuZXRcIjtcbmltcG9ydCB7IGNyZWF0ZUludGVyZmFjZSB9IGZyb20gXCJyZWFkbGluZVwiO1xuXG5sZXQgY3VycmVudENvbW1hbmQgPSAnJztcbmxldCBpc0F1dGhlbnRpY2F0ZWQgPSBmYWxzZTtcblxuY29uc3QgcmwgPSBjcmVhdGVJbnRlcmZhY2Uoe1xuICBpbnB1dDogcHJvY2Vzcy5zdGRpbixcbiAgb3V0cHV0OiBwcm9jZXNzLnN0ZG91dFxufSk7XG5cbmNvbnN0IGNsaWVudCA9IGNyZWF0ZUNvbm5lY3Rpb24oeyBwb3J0OiA0MjQyIH0sICgpID0+IHtcbiAgY29uc29sZS5sb2coXCJjbGllbnQgY29ubmVjdGVkLlwiKTtcbiAgcmwucXVlc3Rpb24oJ0VudGVyIGEgY29tbWFuZDogJywgZnVuY3Rpb24oY21kKXtcbiAgICBjbGllbnQud3JpdGUoY21kKVxuICB9KVxuXG4gIGNsaWVudC5vbihcImRhdGFcIiwgKGRhdGEpID0+IHtcbiAgICBjb25zdCBtZXNzYWdlID0gZGF0YS50b1N0cmluZygpO1xuICAgIGNvbnNvbGUubG9nKFwiTWVzc2FnZSByZWNlaXZlZDpcIiwgbWVzc2FnZSk7XG4gICAgcmwucXVlc3Rpb24oJ0VudGVyIGEgY29tbWFuZDogJywgZnVuY3Rpb24oY21kKXtcbiAgICAgIGNsaWVudC53cml0ZShjbWQpXG4gICAgfSlcbiAgICBjb25zdCBbc3RhdHVzLCAuLi5hcmdzXSA9IG1lc3NhZ2UudHJpbSgpLnNwbGl0KCcgJyk7XG5cbiAgICBpZiAoc3RhdHVzID09IDIzMCAmJiBjdXJyZW50Q29tbWFuZCA9PT0gXCJVU0VSXCIpIHtcbiAgICAgIGlzQXV0aGVudGljYXRlZCA9IHRydWU7XG4gICAgfTtcblxuICAgIGlmIChzdGF0dXMgPT0gMjIxKXtcbiAgICAgIGNvbnNvbGUubG9nKFwiQ2xpZW50IGlzIGNsb3NlZFwiKVxuICAgICAgcHJvY2Vzcy5leGl0KCk7XG4gICAgfVxuXG4gIH0pO1xuXG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "main.js"
      ],
      "names": [
        "currentCommand",
        "isAuthenticated",
        "rl",
        "input",
        "process",
        "stdin",
        "output",
        "stdout",
        "client",
        "port",
        "console",
        "log",
        "question",
        "cmd",
        "write",
        "on",
        "data",
        "message",
        "toString",
        "status",
        "args",
        "trim",
        "split",
        "exit"
      ],
      "mappings": ";;AAAA;;AACA;;AAEA,IAAIA,cAAc,GAAG,EAArB;AACA,IAAIC,eAAe,GAAG,KAAtB;AAEA,MAAMC,EAAE,GAAG,+BAAgB;AACzBC,EAAAA,KAAK,EAAEC,OAAO,CAACC,KADU;AAEzBC,EAAAA,MAAM,EAAEF,OAAO,CAACG;AAFS,CAAhB,CAAX;AAKA,MAAMC,MAAM,GAAG,2BAAiB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAjB,EAAiC,MAAM;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAT,EAAAA,EAAE,CAACU,QAAH,CAAY,mBAAZ,EAAiC,UAASC,GAAT,EAAa;AAC5CL,IAAAA,MAAM,CAACM,KAAP,CAAaD,GAAb;AACD,GAFD;AAIAL,EAAAA,MAAM,CAACO,EAAP,CAAU,MAAV,EAAmBC,IAAD,IAAU;AAC1B,UAAMC,OAAO,GAAGD,IAAI,CAACE,QAAL,EAAhB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCM,OAAjC;AACAf,IAAAA,EAAE,CAACU,QAAH,CAAY,mBAAZ,EAAiC,UAASC,GAAT,EAAa;AAC5CL,MAAAA,MAAM,CAACM,KAAP,CAAaD,GAAb;AACD,KAFD;AAGA,UAAM,CAACM,MAAD,EAAS,GAAGC,IAAZ,IAAoBH,OAAO,CAACI,IAAR,GAAeC,KAAf,CAAqB,GAArB,CAA1B;;AAEA,QAAIH,MAAM,IAAI,GAAV,IAAiBnB,cAAc,KAAK,MAAxC,EAAgD;AAC9CC,MAAAA,eAAe,GAAG,IAAlB;AACD;;AAAA;;AAED,QAAIkB,MAAM,IAAI,GAAd,EAAkB;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAP,MAAAA,OAAO,CAACmB,IAAR;AACD;AAEF,GAjBD;AAmBD,CAzBc,CAAf",
      "sourceRoot": "/Users/nas/Documents/my-ftp-live/client/src/",
      "sourcesContent": [
        "import { createConnection } from \"net\";\nimport { createInterface } from \"readline\";\n\nlet currentCommand = '';\nlet isAuthenticated = false;\n\nconst rl = createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nconst client = createConnection({ port: 4242 }, () => {\n  console.log(\"client connected.\");\n  rl.question('Enter a command: ', function(cmd){\n    client.write(cmd)\n  })\n\n  client.on(\"data\", (data) => {\n    const message = data.toString();\n    console.log(\"Message received:\", message);\n    rl.question('Enter a command: ', function(cmd){\n      client.write(cmd)\n    })\n    const [status, ...args] = message.trim().split(' ');\n\n    if (status == 230 && currentCommand === \"USER\") {\n      isAuthenticated = true;\n    };\n\n    if (status == 221){\n      console.log(\"Client is closed\")\n      process.exit();\n    }\n\n  });\n\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1639315960927
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/nas/Documents/my-ftp-live/client/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nas/Documents/my-ftp-live/client\",\"filename\":\"/Users/nas/Documents/my-ftp-live/client/src/main.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nas/Documents/my-ftp-live/client\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/nas/Documents/my-ftp-live/client/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/nas/Documents/my-ftp-live/client",
      "filename": "/Users/nas/Documents/my-ftp-live/client/src/main.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/nas/Documents/my-ftp-live/client",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/nas/Documents/my-ftp-live/client/src/main.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/nas/Documents/my-ftp-live/client/src/main.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/nas/Documents/my-ftp-live/client/src/",
        "sourceFileName": "main.js"
      }
    },
    "ast": null,
    "code": "import { createConnection } from \"net\";\nimport { createInterface } from \"readline\";\nlet currentCommand = '';\nlet isAuthenticated = false;\nconst rl = createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nconst client = createConnection({\n  port: 4242\n}, () => {\n  console.log(\"client connected.\");\n  rl.question('Enter a command: ', function (cmd) {\n    client.write(cmd);\n  });\n  client.on(\"data\", data => {\n    const message = data.toString();\n    console.log(\"Message received:\", message);\n    rl.question('Enter a command: ', function (cmd) {\n      client.write(cmd);\n    });\n    const [status, ...args] = message.trim().split(' ');\n\n    if (status == 230 && currentCommand === \"USER\") {\n      isAuthenticated = true;\n    }\n\n    ;\n\n    if (status == 221) {\n      console.log(\"Client is closed\");\n      process.exit();\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiY3JlYXRlQ29ubmVjdGlvbiIsImNyZWF0ZUludGVyZmFjZSIsImN1cnJlbnRDb21tYW5kIiwiaXNBdXRoZW50aWNhdGVkIiwicmwiLCJpbnB1dCIsInByb2Nlc3MiLCJzdGRpbiIsIm91dHB1dCIsInN0ZG91dCIsImNsaWVudCIsInBvcnQiLCJjb25zb2xlIiwibG9nIiwicXVlc3Rpb24iLCJjbWQiLCJ3cml0ZSIsIm9uIiwiZGF0YSIsIm1lc3NhZ2UiLCJ0b1N0cmluZyIsInN0YXR1cyIsImFyZ3MiLCJ0cmltIiwic3BsaXQiLCJleGl0Il0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxnQkFBVCxRQUFpQyxLQUFqQztBQUNBLFNBQVNDLGVBQVQsUUFBZ0MsVUFBaEM7QUFFQSxJQUFJQyxjQUFjLEdBQUcsRUFBckI7QUFDQSxJQUFJQyxlQUFlLEdBQUcsS0FBdEI7QUFFQSxNQUFNQyxFQUFFLEdBQUdILGVBQWUsQ0FBQztBQUN6QkksRUFBQUEsS0FBSyxFQUFFQyxPQUFPLENBQUNDLEtBRFU7QUFFekJDLEVBQUFBLE1BQU0sRUFBRUYsT0FBTyxDQUFDRztBQUZTLENBQUQsQ0FBMUI7QUFLQSxNQUFNQyxNQUFNLEdBQUdWLGdCQUFnQixDQUFDO0FBQUVXLEVBQUFBLElBQUksRUFBRTtBQUFSLENBQUQsRUFBaUIsTUFBTTtBQUNwREMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksbUJBQVo7QUFDQVQsRUFBQUEsRUFBRSxDQUFDVSxRQUFILENBQVksbUJBQVosRUFBaUMsVUFBU0MsR0FBVCxFQUFhO0FBQzVDTCxJQUFBQSxNQUFNLENBQUNNLEtBQVAsQ0FBYUQsR0FBYjtBQUNELEdBRkQ7QUFJQUwsRUFBQUEsTUFBTSxDQUFDTyxFQUFQLENBQVUsTUFBVixFQUFtQkMsSUFBRCxJQUFVO0FBQzFCLFVBQU1DLE9BQU8sR0FBR0QsSUFBSSxDQUFDRSxRQUFMLEVBQWhCO0FBQ0FSLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1CQUFaLEVBQWlDTSxPQUFqQztBQUNBZixJQUFBQSxFQUFFLENBQUNVLFFBQUgsQ0FBWSxtQkFBWixFQUFpQyxVQUFTQyxHQUFULEVBQWE7QUFDNUNMLE1BQUFBLE1BQU0sQ0FBQ00sS0FBUCxDQUFhRCxHQUFiO0FBQ0QsS0FGRDtBQUdBLFVBQU0sQ0FBQ00sTUFBRCxFQUFTLEdBQUdDLElBQVosSUFBb0JILE9BQU8sQ0FBQ0ksSUFBUixHQUFlQyxLQUFmLENBQXFCLEdBQXJCLENBQTFCOztBQUVBLFFBQUlILE1BQU0sSUFBSSxHQUFWLElBQWlCbkIsY0FBYyxLQUFLLE1BQXhDLEVBQWdEO0FBQzlDQyxNQUFBQSxlQUFlLEdBQUcsSUFBbEI7QUFDRDs7QUFBQTs7QUFFRCxRQUFJa0IsTUFBTSxJQUFJLEdBQWQsRUFBa0I7QUFDaEJULE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtCQUFaO0FBQ0FQLE1BQUFBLE9BQU8sQ0FBQ21CLElBQVI7QUFDRDtBQUVGLEdBakJEO0FBbUJELENBekI4QixDQUEvQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbmFzL0RvY3VtZW50cy9teS1mdHAtbGl2ZS9jbGllbnQvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNvbm5lY3Rpb24gfSBmcm9tIFwibmV0XCI7XG5pbXBvcnQgeyBjcmVhdGVJbnRlcmZhY2UgfSBmcm9tIFwicmVhZGxpbmVcIjtcblxubGV0IGN1cnJlbnRDb21tYW5kID0gJyc7XG5sZXQgaXNBdXRoZW50aWNhdGVkID0gZmFsc2U7XG5cbmNvbnN0IHJsID0gY3JlYXRlSW50ZXJmYWNlKHtcbiAgaW5wdXQ6IHByb2Nlc3Muc3RkaW4sXG4gIG91dHB1dDogcHJvY2Vzcy5zdGRvdXRcbn0pO1xuXG5jb25zdCBjbGllbnQgPSBjcmVhdGVDb25uZWN0aW9uKHsgcG9ydDogNDI0MiB9LCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKFwiY2xpZW50IGNvbm5lY3RlZC5cIik7XG4gIHJsLnF1ZXN0aW9uKCdFbnRlciBhIGNvbW1hbmQ6ICcsIGZ1bmN0aW9uKGNtZCl7XG4gICAgY2xpZW50LndyaXRlKGNtZClcbiAgfSlcblxuICBjbGllbnQub24oXCJkYXRhXCIsIChkYXRhKSA9PiB7XG4gICAgY29uc3QgbWVzc2FnZSA9IGRhdGEudG9TdHJpbmcoKTtcbiAgICBjb25zb2xlLmxvZyhcIk1lc3NhZ2UgcmVjZWl2ZWQ6XCIsIG1lc3NhZ2UpO1xuICAgIHJsLnF1ZXN0aW9uKCdFbnRlciBhIGNvbW1hbmQ6ICcsIGZ1bmN0aW9uKGNtZCl7XG4gICAgICBjbGllbnQud3JpdGUoY21kKVxuICAgIH0pXG4gICAgY29uc3QgW3N0YXR1cywgLi4uYXJnc10gPSBtZXNzYWdlLnRyaW0oKS5zcGxpdCgnICcpO1xuXG4gICAgaWYgKHN0YXR1cyA9PSAyMzAgJiYgY3VycmVudENvbW1hbmQgPT09IFwiVVNFUlwiKSB7XG4gICAgICBpc0F1dGhlbnRpY2F0ZWQgPSB0cnVlO1xuICAgIH07XG5cbiAgICBpZiAoc3RhdHVzID09IDIyMSl7XG4gICAgICBjb25zb2xlLmxvZyhcIkNsaWVudCBpcyBjbG9zZWRcIilcbiAgICAgIHByb2Nlc3MuZXhpdCgpO1xuICAgIH1cblxuICB9KTtcblxufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "main.js"
      ],
      "names": [
        "createConnection",
        "createInterface",
        "currentCommand",
        "isAuthenticated",
        "rl",
        "input",
        "process",
        "stdin",
        "output",
        "stdout",
        "client",
        "port",
        "console",
        "log",
        "question",
        "cmd",
        "write",
        "on",
        "data",
        "message",
        "toString",
        "status",
        "args",
        "trim",
        "split",
        "exit"
      ],
      "mappings": "AAAA,SAASA,gBAAT,QAAiC,KAAjC;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,IAAIC,cAAc,GAAG,EAArB;AACA,IAAIC,eAAe,GAAG,KAAtB;AAEA,MAAMC,EAAE,GAAGH,eAAe,CAAC;AACzBI,EAAAA,KAAK,EAAEC,OAAO,CAACC,KADU;AAEzBC,EAAAA,MAAM,EAAEF,OAAO,CAACG;AAFS,CAAD,CAA1B;AAKA,MAAMC,MAAM,GAAGV,gBAAgB,CAAC;AAAEW,EAAAA,IAAI,EAAE;AAAR,CAAD,EAAiB,MAAM;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAT,EAAAA,EAAE,CAACU,QAAH,CAAY,mBAAZ,EAAiC,UAASC,GAAT,EAAa;AAC5CL,IAAAA,MAAM,CAACM,KAAP,CAAaD,GAAb;AACD,GAFD;AAIAL,EAAAA,MAAM,CAACO,EAAP,CAAU,MAAV,EAAmBC,IAAD,IAAU;AAC1B,UAAMC,OAAO,GAAGD,IAAI,CAACE,QAAL,EAAhB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCM,OAAjC;AACAf,IAAAA,EAAE,CAACU,QAAH,CAAY,mBAAZ,EAAiC,UAASC,GAAT,EAAa;AAC5CL,MAAAA,MAAM,CAACM,KAAP,CAAaD,GAAb;AACD,KAFD;AAGA,UAAM,CAACM,MAAD,EAAS,GAAGC,IAAZ,IAAoBH,OAAO,CAACI,IAAR,GAAeC,KAAf,CAAqB,GAArB,CAA1B;;AAEA,QAAIH,MAAM,IAAI,GAAV,IAAiBnB,cAAc,KAAK,MAAxC,EAAgD;AAC9CC,MAAAA,eAAe,GAAG,IAAlB;AACD;;AAAA;;AAED,QAAIkB,MAAM,IAAI,GAAd,EAAkB;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAP,MAAAA,OAAO,CAACmB,IAAR;AACD;AAEF,GAjBD;AAmBD,CAzB8B,CAA/B",
      "sourceRoot": "/Users/nas/Documents/my-ftp-live/client/src/",
      "sourcesContent": [
        "import { createConnection } from \"net\";\nimport { createInterface } from \"readline\";\n\nlet currentCommand = '';\nlet isAuthenticated = false;\n\nconst rl = createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nconst client = createConnection({ port: 4242 }, () => {\n  console.log(\"client connected.\");\n  rl.question('Enter a command: ', function(cmd){\n    client.write(cmd)\n  })\n\n  client.on(\"data\", (data) => {\n    const message = data.toString();\n    console.log(\"Message received:\", message);\n    rl.question('Enter a command: ', function(cmd){\n      client.write(cmd)\n    })\n    const [status, ...args] = message.trim().split(' ');\n\n    if (status == 230 && currentCommand === \"USER\") {\n      isAuthenticated = true;\n    };\n\n    if (status == 221){\n      console.log(\"Client is closed\")\n      process.exit();\n    }\n\n  });\n\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1639315960927
  }
}